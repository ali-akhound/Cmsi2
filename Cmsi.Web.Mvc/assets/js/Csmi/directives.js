function pageTitle(e, i) { return { link: function (t, n) { var o = function (e, t, o, r, c) { var l = "Project | Responsive Admin Theme"; t.data && t.data.pageTitle && (l = "Project | " + t.data.pageTitle), i(function () { n.text(l) }) }; e.$on("$stateChangeStart", o) } } } function sideNavigation(e) { return { restrict: "A", link: function (i, t) { e(function () { t.metisMenu() }); var n = $('#side-menu a:not([href$="\\#"])'); if (n.click(function () { $(window).width() < 769 && $("body").toggleClass("mini-navbar") }), $("body").hasClass("fixed-sidebar")) { var o = t.parent(); o.slimScroll({ height: "100%", railOpacity: .9 }) } } } } function responsiveVideo() { return { restrict: "A", link: function (e, i) { var t = i, n = i.children(); n.attr("data-aspectRatio", n.height() / n.width()).removeAttr("height").removeAttr("width"), $(window).resize(function () { var e = t.width(); n.width(e).height(e * n.attr("data-aspectRatio")) }).resize() } } } function iboxTools(e) { return { restrict: "A", scope: !0, templateUrl: "views/common/ibox_tools.html", controller: function (i, t) { i.showhide = function () { var i = t.closest("div.ibox"), n = t.find("i:first"), o = i.children(".ibox-content"); o.slideToggle(200), n.toggleClass("fa-chevron-up").toggleClass("fa-chevron-down"), i.toggleClass("").toggleClass("border-bottom"), e(function () { i.resize(), i.find("[id^=map-]").resize() }, 50) }, i.closebox = function () { var e = t.closest("div.ibox"); e.remove() } } } } function iboxToolsFullScreen(e) { return { restrict: "A", scope: !0, templateUrl: "views/common/ibox_tools_full_screen.html", controller: function (i, t) { i.showhide = function () { var i = t.closest("div.ibox"), n = t.find("i:first"), o = i.children(".ibox-content"); o.slideToggle(200), n.toggleClass("fa-chevron-up").toggleClass("fa-chevron-down"), i.toggleClass("").toggleClass("border-bottom"), e(function () { i.resize(), i.find("[id^=map-]").resize() }, 50) }, i.closebox = function () { var e = t.closest("div.ibox"); e.remove() }, i.fullscreen = function () { var e = t.closest("div.ibox"), i = t.find("i.fa-expand"); $("body").toggleClass("fullscreen-ibox-mode"), i.toggleClass("fa-expand").toggleClass("fa-compress"), e.toggleClass("fullscreen"), setTimeout(function () { $(window).trigger("resize") }, 100) } } } } function minimalizaSidebar(e) { return { restrict: "A", template: '<a class="navbar-minimalize minimalize-styl-2 btn btn-primary " href="" ng-click="minimalize()"><i class="fa fa-bars"></i></a>', controller: function (e, i) { e.minimalize = function () { $("body").toggleClass("mini-navbar"), !$("body").hasClass("mini-navbar") || $("body").hasClass("body-small") ? ($("#side-menu").hide(), setTimeout(function () { $("#side-menu").fadeIn(400) }, 200)) : $("body").hasClass("fixed-sidebar") ? ($("#side-menu").hide(), setTimeout(function () { $("#side-menu").fadeIn(400) }, 100)) : $("#side-menu").removeAttr("style") } } } } function closeOffCanvas() { return { restrict: "A", template: '<a class="close-canvas-menu" ng-click="closeOffCanvas()"><i class="fa fa-times"></i></a>', controller: function (e, i) { e.closeOffCanvas = function () { $("body").toggleClass("mini-navbar") } } } } function vectorMap() { return { restrict: "A", scope: { myMapData: "=" }, link: function (e, i, t) { var n = (i.vectorMap({ map: "world_mill_en", backgroundColor: "transparent", regionStyle: { initial: { fill: "#e4e4e4", "fill-opacity": .9, stroke: "none", "stroke-width": 0, "stroke-opacity": 0 } }, series: { regions: [{ values: e.myMapData, scale: ["#1ab394", "#22d6b1"], normalizeFunction: "polynomial" }] } }), function () { i.remove() }); e.$on("$destroy", function () { n() }) } } } function sparkline() { return { restrict: "A", scope: { sparkData: "=", sparkOptions: "=" }, link: function (e, i, t) { e.$watch(e.sparkData, function () { n() }), e.$watch(e.sparkOptions, function () { n() }); var n = function () { $(i).sparkline(e.sparkData, e.sparkOptions) } } } } function icheck(e) { return { restrict: "A", require: "ngModel", link: function (i, t, n, o) { return e(function () { var e; return e = n.value, i.$watch(n.ngModel, function (e) { $(t).iCheck("update") }), $(t).iCheck({ checkboxClass: "icheckbox_square-green", radioClass: "iradio_square-green" }).on("ifChanged", function (r) { return "checkbox" === $(t).attr("type") && n.ngModel && i.$apply(function () { return o.$setViewValue(r.target.checked) }), "radio" === $(t).attr("type") && n.ngModel ? i.$apply(function () { return o.$setViewValue(e) }) : void 0 }) }) } } } function ionRangeSlider() { return { restrict: "A", scope: { rangeOptions: "=" }, link: function (e, i, t) { i.ionRangeSlider(e.rangeOptions) } } } function dropZone() { return { restrict: "C", link: function (e, i, t) { var n = { url: "http://localhost:8080/upload", maxFilesize: 100, paramName: "uploadfile", maxThumbnailFilesize: 10, parallelUploads: 1, autoProcessQueue: !1 }, o = { addedfile: function (i) { e.file = i, null != this.files[1] && this.removeFile(this.files[0]), e.$apply(function () { e.fileAdded = !0 }) }, success: function (e, i) { } }; dropzone = new Dropzone(i[0], n), angular.forEach(o, function (e, i) { dropzone.on(i, e) }), e.processDropzone = function () { dropzone.processQueue() }, e.resetDropzone = function () { dropzone.removeAllFiles() } } } } function chatSlimScroll(e) { return { restrict: "A", link: function (i, t) { e(function () { t.slimscroll({ height: "234px", railOpacity: .4 }) }) } } } function customValid() { return { require: "ngModel", link: function (e, i, t, n) { e.$watch(t.ngModel, function () { var i = "Project"; e.extras == i ? n.$setValidity("cvalid", !0) : n.$setValidity("cvalid", !1) }) } } } function fullScroll(e) { return { restrict: "A", link: function (i, t) { e(function () { t.slimscroll({ height: "100%", railOpacity: .9 }) }) } } } function slimScroll(e) { return { restrict: "A", scope: { boxHeight: "@" }, link: function (i, t) { e(function () { t.slimscroll({ height: i.boxHeight, railOpacity: .9 }) }) } } } function clockPicker() { return { restrict: "A", link: function (e, i) { i.clockpicker() } } } function landingScrollspy() { return { restrict: "A", link: function (e, i, t) { i.scrollspy({ target: ".navbar-fixed-top", offset: 80 }) } } } function fitHeight() { return { restrict: "A", link: function (e, i) { i.css("height", $(window).height() + "px"), i.css("min-height", $(window).height() + "px") } } } function truncate(e) { return { restrict: "A", scope: { truncateOptions: "=" }, link: function (i, t) { e(function () { t.dotdotdot(i.truncateOptions) }) } } } function touchSpin() { return { restrict: "A", scope: { spinOptions: "=" }, link: function (e, i, t) { e.$watch(e.spinOptions, function () { n() }); var n = function () { $(i).TouchSpin(e.spinOptions) } } } } function markdownEditor() { return { restrict: "A", require: "ngModel", link: function (e, i, t, n) { $(i).markdown({ savable: !1, onChange: function (e) { n.$setViewValue(e.getContent()) } }) } } } function passwordMeter() { return { restrict: "A", scope: { pwOptions: "=" }, link: function (e, i, t) { e.$watch(e.pwOptions, function () { n() }); var n = function () { $(i).pwstrength(e.pwOptions) } } } } function Directive() { return { template: '<select style="margin-left:0px;width:100%" ng-model="directiveModel" ng_options = "s.id as s.text for s in directiveModel track by s.id"></select>', replace: !0, restrict: "E", scope: { url: "@", urlQueryString: "@", selectedItem: "=", textAttr: "@", queryParam: "@", containerCssClass: "@", minimumInputLength: "@", multiple: "@", directiveModel: "=" }, link: function (e, i) { var t = { minimumInputLength: e.minimumInputLength || 3, multiple: e.multiple, ajax: { url: e.url + ("" != e.urlQueryString && void 0 != e.urlQueryString ? "?" + e.urlQueryString : ""), quietMillis: 250, dataType: "json", method: "POST", data: function (i) { var t = new Object; return t[e.queryParam] = i, t }, processResults: function (e, i) { return { results: e } } } }; if ($(i).addClass(e.containerCssClass), $(i).select2(t), $(i).on("select2:select", function (e) { console.log(e) }), e.selectedItem) { var n = []; $(i).empty(), $.each(e.selectedItem, function (e, t) { n.push(t.id), $(i).append('<option value="' + t.id + '">' + t.text + "</option>") }), setTimeout(function () { }, 1e3) } } } } function fixFileInput() { return { require: "ngModel", link: function (e, i, t, n) { $(i).on("change", function (e) { var t = i[0].files; n.$setViewValue(t) }) } } } angular.module("CSMI").directive("pageTitle", ["$rootScope", "$timeout", pageTitle]).directive("sideNavigation", ["$timeout", sideNavigation]).directive("iboxTools", ["$timeout", iboxTools]).directive("minimalizaSidebar", ["$timeout", minimalizaSidebar]).directive("vectorMap", vectorMap).directive("sparkline", sparkline).directive("icheck", ["$timeout", icheck]).directive("ionRangeSlider", ionRangeSlider).directive("dropZone", dropZone).directive("responsiveVideo", responsiveVideo).directive("chatSlimScroll", ["$timeout", chatSlimScroll]).directive("customValid", customValid).directive("fullScroll", ["$timeout", fullScroll]).directive("closeOffCanvas", closeOffCanvas).directive("clockPicker", clockPicker).directive("landingScrollspy", landingScrollspy).directive("fitHeight", fitHeight).directive("iboxToolsFullScreen", ["$timeout", iboxToolsFullScreen]).directive("slimScroll", ["$timeout", slimScroll]).directive("truncate", ["$timeout", truncate]).directive("touchSpin", touchSpin).directive("markdownEditor", markdownEditor).directive("passwordMeter", passwordMeter).directive("ajaxSearchInput", Directive).directive("filesInput", fixFileInput)
